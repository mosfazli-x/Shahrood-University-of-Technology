;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : Temperature Show
;Version : 1
;Date    : 12/20/2021
;Author  : Mostafa Fazli
;Company : Knights
;Comments:
;
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;
;------------------------------------------------------------------------------------------------------------------------ ...
;---¦¦¦¦¦¦----------¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦--------- ...
;---¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦--------- ...
;---¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦--------- ...
;---¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦---------¦¦¦¦¦¦---------¦¦¦¦¦¦--¦¦¦¦¦¦---------¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦--------- ...
;---¦¦¦¦¦¦--¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-------¦¦¦¦¦¦¦¦¦¦---¦¦¦¦¦¦--------- ...
;---¦¦¦¦¦¦--¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-----¦¦¦¦¦¦¦¦¦¦-----¦¦¦¦¦¦--------- ...
;---¦¦¦¦¦¦--¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦---¦¦¦¦¦¦¦¦¦¦-------¦¦¦¦¦¦--------- ...
;---¦¦¦¦¦¦----------¦¦¦¦¦¦-¦¦¦¦¦¦--¦¦¦¦¦¦---------¦¦¦¦¦¦-¦¦¦¦¦¦---------¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦---------¦¦¦¦¦¦--------- ...
;---¦¦¦¦¦¦----------¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦---------¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦- ...
;---¦¦¦¦¦¦----------¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦---------¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦- ...
;---¦¦¦¦¦¦----------¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦---------¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦- ...
;------------------------------------------------------------------------------------------------------------------------ ...
;
;
;*******************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdio.h>
;
;#asm
;PCODE: $0000000D VOL: 0
    .equ __lcd_port=0x15;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 002E #endasm
;#include <lcd.h>
;
;
;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
;
;float temperature;
;char Buffer_LCD[16];
;int ADCInput;
;
;
;
;unsigned int read_adc(unsigned char adc_input)
; 0000 003B {

	.CSEG
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 003C ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $00000012 VOL: 0
;	adc_input -> Y+0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 003D delay_us(10);
;PCODE: $00000016 VOL: 0
; 0000 003E ADCSRA|=(1<<ADSC);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 003F while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0040 ADCSRA|=(1<<ADIF);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0041 return ADCW;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0042 }
;PCODE: $00000024 VOL: 0
;
;
;void main(void)
; 0000 0046 {
;PCODE: $00000025 VOL: 0
; 0000 0047 
; 0000 0048 DDRB=0xFF;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0049 DDRD=0xFF;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 004A 
; 0000 004B 
; 0000 004C 
; 0000 004D ADMUX=ADC_VREF_TYPE;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 004E ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (1<<ADIE) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 004F SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0050 
; 0000 0051 delay_ms(50);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0052 lcd_init(16);
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0053 DDRB=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0054 
; 0000 0055 
; 0000 0056 while (1)
;PCODE: $00000037 VOL: 0
; 0000 0057       {
; 0000 0058       lcd_clear();
;PCODE: $00000038 VOL: 0
; 0000 0059       if(PINB.0 == 0){
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 005A           lcd_gotoxy(0,0);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 005B           lcd_puts("Lowest Temp");
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 005C           lcd_gotoxy(0,1);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 005D           lcd_puts("measure 0 C");
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 005E           delay_ms(100);
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 005F       }
; 0000 0060       if(PINB.1 == 0){
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0061           lcd_gotoxy(0,0);
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0062           lcd_puts("Highest Temp");
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0063           lcd_gotoxy(0,1);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0064           lcd_puts("measure 150 C");
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0065           delay_ms(100);
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0066       }
; 0000 0067       if(PINB.2 == 0){
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0068           ADCInput=read_adc(0);
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0069           temperature=(ADCInput/2.05);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 006A           lcd_gotoxy(0,0);
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 006B           lcd_puts("Temperature=");
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 006C           lcd_gotoxy(1,1);
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 006D           sprintf(Buffer_LCD,"%.1f",temperature);
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 006E           lcd_puts(Buffer_LCD);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 006F           lcd_gotoxy(7,1);
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0070           lcd_puts("C");
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0071           if(temperature < 20){
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0072           PORTD.1 = 1;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0073           }
; 0000 0074           if(temperature >= 20 && temperature <= 30){
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0075           PORTD.0 = 0;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0076           PORTD.1 = 0;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0077           PORTD.2 = 0;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0078           PORTD.3 = 0;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0079           PORTD.4 = 0;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 007A           PORTD.5 = 0;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 007B           PORTD.6 = 0;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 007C           PORTD.7 = 0;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 007D           }
; 0000 007E           if(temperature > 30){
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 007F           PORTD.0 = 1;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0080           }
; 0000 0081           delay_ms(100);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 0082           }
; 0000 0083       }
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 0084 }
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0

	.DSEG
_0xA:
	.BYTE 0x42
