/*******************************************************
This program was created by the
CodeWizardAVR V3.12 Advanced
Automatic Program Generator
© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
http://www.hpinfotech.com

Project : Temperature Show
Version : 1
Date    : 12/20/2021
Author  : Mostafa Fazli
Company : Knights
Comments: 


Chip type               : ATmega32
Program type            : Application
AVR Core Clock frequency: 8.000000 MHz
Memory model            : Small
External RAM size       : 0
Data Stack size         : 512

---------------------------------------------------------------------------------------------------------------------------------
---¦¦¦¦¦¦----------¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦---------¦¦¦¦¦¦¦¦¦¦-
---¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦---------¦¦¦¦¦¦¦¦¦¦-
---¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦---------¦¦¦¦¦¦¦¦¦¦-
---¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦---------¦¦¦¦¦¦---------¦¦¦¦¦¦--¦¦¦¦¦¦---------¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦-----------¦¦¦¦¦¦---
---¦¦¦¦¦¦--¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-------¦¦¦¦¦¦¦¦¦¦---¦¦¦¦¦¦-----------¦¦¦¦¦¦---
---¦¦¦¦¦¦--¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-----¦¦¦¦¦¦¦¦¦¦-----¦¦¦¦¦¦-----------¦¦¦¦¦¦---
---¦¦¦¦¦¦--¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦---¦¦¦¦¦¦¦¦¦¦-------¦¦¦¦¦¦-----------¦¦¦¦¦¦---
---¦¦¦¦¦¦----------¦¦¦¦¦¦-¦¦¦¦¦¦--¦¦¦¦¦¦---------¦¦¦¦¦¦-¦¦¦¦¦¦---------¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦---------¦¦¦¦¦¦-----------¦¦¦¦¦¦---
---¦¦¦¦¦¦----------¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦---------¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦-
---¦¦¦¦¦¦----------¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦---------¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦-
---¦¦¦¦¦¦----------¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦---------¦¦¦¦¦¦--¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦¦¦¦¦-¦¦¦¦¦¦¦¦¦¦-
---------------------------------------------------------------------------------------------------------------------------------


*******************************************************/

#include <mega32.h>
#include <delay.h>
#include <stdio.h>

#asm
    .equ __lcd_port=0x15;
#endasm
#include <lcd.h>


#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))

float temperature;
char Buffer_LCD[16];
int ADCInput;



unsigned int read_adc(unsigned char adc_input)
{
ADMUX=adc_input | ADC_VREF_TYPE;
delay_us(10);
ADCSRA|=(1<<ADSC);
while ((ADCSRA & (1<<ADIF))==0);
ADCSRA|=(1<<ADIF);
return ADCW;
}


void main(void)
{

DDRB=0xFF;
DDRD=0xFF;



ADMUX=ADC_VREF_TYPE;
ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (1<<ADIE) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);

delay_ms(50);
lcd_init(16);
DDRB=0x00;


while (1)
      {
      lcd_clear();
        PORTB = 0b00000000;
      if(PINB.0 == 0){      
          lcd_gotoxy(0,0);                                   
          lcd_puts("Lowest Temp");
          lcd_gotoxy(0,1);
          lcd_puts("measure 0 C");
          delay_ms(100);          
      }
      if(PINB.1 == 0){      
          lcd_gotoxy(0,0);                                   
          lcd_puts("Highest Temp");
          lcd_gotoxy(0,1);
          lcd_puts("measure 150 C");
          delay_ms(100);          
      }        
      if(PINB.2 == 0){      
          ADCInput=read_adc(0);
          temperature=(ADCInput/2.05);
          lcd_gotoxy(0,0);                                   
          lcd_puts("Temperature=");
          lcd_gotoxy(1,1);
          sprintf(Buffer_LCD,"%.1f",temperature);
          lcd_puts(Buffer_LCD);
          lcd_gotoxy(7,1);
          lcd_puts("C");
          if(temperature < 20){
          PORTD.1 = 1;
          }
          if(temperature > 30){
          PORTD.0 = 1;
          }
          delay_ms(100);
          }
      }
}
